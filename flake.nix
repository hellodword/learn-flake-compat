# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.10)
{
  # A helpful description of your flake
  description = "test";

  # Flake inputs
  inputs = {
    flake-compat.url = "github:edolstra/flake-compat/master";

    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
  };

  # Flake outputs that other flakes can use
  outputs = { self, nixpkgs, ... }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in
    {
      devShells = forEachSupportedSystem ({ pkgs }: rec {
        dev = pkgs.mkShell {
          # Pinned packages available in the environment
          packages = with pkgs; [
            curl
            git
            jq
            wget
            nixpkgs-fmt
          ];

          # Environment variables
          env = {
            MYENV = "1";
          };

          # A hook run every time you enter the environment
          shellHook = ''
            echo hook
          '';
        };
        default = dev;
      });

      packages = forEachSupportedSystem ({ pkgs }: rec {
        dev = pkgs.ponysay;
        default = dev;
      });

      apps = forEachSupportedSystem ({ pkgs }: rec {
        default = {
          type = "app";
          program = "${nixpkgs.lib.getExe' pkgs.cowsay "cowsay"}";
        };
      });
    };
}
